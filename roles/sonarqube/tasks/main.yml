---

- name: Create sonar User
  user:
    name: sonar
    password: "{{sonar.password | password_hash('sha512', 'mysecretsalt')}}"
  become: yes
  become_user: root

- name: "Status file /home/sonar/{{sonarapp.version}}.zip"
  stat:
    path:  "/home/sonar/{{sonarapp.version}}.zip"
  register: sonar_status
  become: yes
  become_user: root

- name: "Download {{sonarapp.version}}.zip"
  get_url:
    url: "https://binaries.sonarsource.com/Distribution/sonarqube/{{sonarapp.version}}.zip"
    dest: "/home/sonar/{{sonarapp.version}}.zip"
    mode: 0440
  become: yes
  become_user: sonar
  when: not sonar_status.stat.exists

- name: "Extract {{sonarapp.version}}.zip into /home/sonar"
  unarchive:
    src: "/home/sonar/{{sonarapp.version}}.zip"
    dest: /home/sonar
    remote_src: True
  become: yes
  become_user: sonar
  when: not sonar_status.stat.exists

- name: "Link {{sonarapp.version}} to nexus-current"
  file:
    state: link
    path: /home/sonar/sonar-current
    src: "/home/sonar/{{sonarapp.version}}"
  become: yes
  become_user: sonar

- name: Generate Service Conf
  template:
    src: sonar.properties
    dest: "/home/sonar/{{sonarapp.version}}/conf/sonar.properties"
    mode: 0744
  become: yes
  become_user: sonar

- name: Generate Service Conf
  template:
    src: service.j2
    dest: /etc/systemd/system/sonar.service
    mode: 0744
  become: yes
  become_user: root

- name: Start sonar
  service:
    name: sonar
    enabled: yes
    state: started
  become: yes
  become_user: root

- name: Generate NGinx Conf
  template:
    src: nginx.j2
    dest: /etc/nginx/conf.d/sonar.conf
    mode: 0744
  become: yes
  become_user: root
  notify: Restart nginx services